{"version":3,"sources":["components/App.js","index.js"],"names":["App","state","location","temp","desc","icon","feelsLike","humidity","wind","sunrise","sunset","handleSubmit","e","preventDefault","city","target","value","api","process","fetchData","err","console","log","message","fetch","then","response","ok","json","setState","Error","data","celcius","parseInt","main","name","weather","feels_like","speed","catch","error","long","lat","navigator","geolocation","getCurrentPosition","position","coords","longitude","latitude","this","className","src","alt","onSubmit","type","placeholder","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAyHeA,G,kNArHZC,MAAQ,CACLC,SAAU,GACVC,KAAM,EACNC,KAAM,GACNC,KAAM,MACNC,UAAW,EACXC,SAAU,GACVC,KAAM,GACNC,QAAS,GACTC,OAAQ,I,EAsBXC,aAAe,SAACC,GACbA,EAAEC,iBACF,IAAIC,EAAOF,EAAEG,OAAOD,KAAKE,MACnBC,EAAG,4DAAwDH,EAAxD,kBAAsEI,oCAE/E,IACG,EAAKC,UAAUF,GAElB,MAAMG,GACHC,QAAQC,IAAIF,EAAIG,W,EAItBJ,UAAY,SAACF,GACVO,MAAMP,GACFQ,MAAK,SAAAC,GACH,GAAGA,EAASC,GACT,OAAOD,EAASE,OAGhB,MADA,EAAKC,SAAS,CAAC3B,SAAU,4BACnB,IAAI4B,MAAM,uBAGrBL,MAAK,SAAAM,GACH,IAAIC,EAAUC,SAASF,EAAKG,KAAK/B,KAAO,KACxC,EAAK0B,SAAS,CACX1B,KAAM6B,EACN9B,SAAU6B,EAAKI,KACf/B,KAAM2B,EAAKK,QAAQ,GAAGF,KACtB7B,KAAM0B,EAAKK,QAAQ,GAAG/B,KACtBC,UAAW2B,SAASF,EAAKG,KAAKG,WAAa,KAC3C9B,SAAUwB,EAAKG,KAAK3B,SACpBC,KAAMyB,SAA2B,MAAlBF,EAAKvB,KAAK8B,YAG9BC,OAAM,SAACC,GACLnB,QAAQC,IAAIkB,O,kEAvDA,IACdC,EACAC,EAFa,OAIjB,GAAGC,UAAUC,YACVD,UAAUC,YAAYC,oBAAmB,SAAAC,GACtCL,EAAOK,EAASC,OAAOC,UACvBN,EAAMI,EAASC,OAAOE,SACtB,IAAMhC,EAAG,8DAA0DyB,EAA1D,gBAAqED,EAArE,kBAAmFvB,oCAE5F,EAAKC,UAAUF,UAGhB,CACF,IAAMA,EAAG,yEAAqEC,oCAC9EgC,KAAK/B,UAAUF,M,+BA6ClB,OACG,yBAAKkC,UAAU,OAEZ,yBAAKA,UAAU,QACZ,wBAAIA,UAAU,YAAYD,KAAKjD,MAAMC,UACrC,yBAAKiD,UAAU,eAAeD,KAAKjD,MAAMG,MACzC,yBAAK+C,UAAU,UACZ,wBAAIA,UAAU,iBACVD,KAAKjD,MAAME,MAEf,oCAEH,yBAAKgD,UAAU,QACT,yBAAKC,IAAG,4CAAuCF,KAAKjD,MAAMI,KAAlD,WAAiEgD,IAAKH,KAAKjD,MAAMG,SAIlG,yBAAK+C,UAAU,WACZ,yBAAKA,UAAU,cAAf,cACeD,KAAKjD,MAAMK,UAD1B,KAGA,yBAAK6C,UAAU,YAAf,YACaD,KAAKjD,MAAMM,SADxB,KAGA,yBAAK4C,UAAU,QAAf,QACSD,KAAKjD,MAAMO,KADpB,SAKH,yBAAK2C,UAAU,mBACZ,0BAAMG,SAAUJ,KAAKvC,cAClB,2BACG4C,KAAK,OACLpB,KAAK,OACLqB,YAAY,oBAEf,0D,GA7GAC,IAAMC,YCExBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.5bed5a34.chunk.js","sourcesContent":["import React from 'react'\nimport '../App.css'\n\nclass App extends React.Component {\n   state = {\n      location: '',\n      temp: 0,\n      desc: '',\n      icon: '10d',\n      feelsLike: 0,\n      humidity: '',\n      wind: '',\n      sunrise: '',\n      sunset: ''\n   }\n\n   componentDidMount() {\n      let long;\n      let lat;\n\n      if(navigator.geolocation){\n         navigator.geolocation.getCurrentPosition(position => {\n            long = position.coords.longitude;\n            lat = position.coords.latitude;\n            const api = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=${process.env.REACT_APP_OWM_API_KEY}`\n\n            this.fetchData(api);\n         })\n      } \n      else {\n         const api = `https://api.openweathermap.org/data/2.5/weather?q=london&appid=${process.env.REACT_APP_OWM_API_KEY}`\n         this.fetchData(api)\n      }\n   }\n\n   handleSubmit = (e) => {\n      e.preventDefault();\n      let city = e.target.city.value;\n      const api = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${process.env.REACT_APP_OWM_API_KEY}`;\n\n      try {\n         this.fetchData(api);\n      }\n      catch(err) {\n         console.log(err.message);\n      }\n   }\n\n   fetchData = (api) => {\n      fetch(api)\n         .then(response =>{\n            if(response.ok){\n               return response.json();\n            } else {\n               this.setState({location: 'Enter a valid city name'})\n               throw new Error('Not a valid city')\n            }\n         })\n         .then(data =>{\n            let celcius = parseInt(data.main.temp - 273)\n            this.setState({\n               temp: celcius,\n               location: data.name,\n               desc: data.weather[0].main,\n               icon: data.weather[0].icon,\n               feelsLike: parseInt(data.main.feels_like - 273),\n               humidity: data.main.humidity,\n               wind: parseInt(data.wind.speed * 2.237)\n            })\n         })\n         .catch((error) => {\n            console.log(error)\n         })\n   }\n\n   render(){\n      return (\n         <div className=\"App\">\n\n            <div className=\"head\">\n               <h1 className=\"location\">{this.state.location}</h1>\n               <div className=\"description\">{this.state.desc}</div>\n               <div className=\"degree\">\n                  <h2 className=\"degree-number\">\n                     {this.state.temp}\n                  </h2>\n                  <span>C</span>\n               </div>\n               <div className=\"icon\">\n                     <img src={`https://openweathermap.org/img/wn/${this.state.icon}@2x.png`} alt={this.state.desc} />\n               </div>\n            </div>\n\n            <div className=\"details\">\n               <div className=\"feels-like\">\n                  Feels like {this.state.feelsLike}C\n               </div>\n               <div className=\"humidity\">\n                  Humidity {this.state.humidity}%\n               </div>\n               <div className=\"wind\">\n                  Wind {this.state.wind} mph\n               </div>\n            </div>\n\n            <div className=\"change-location\">\n               <form onSubmit={this.handleSubmit}>\n                  <input \n                     type=\"text\"\n                     name=\"city\"\n                     placeholder=\"Enter city name\"\n                  />\n                  <button>Change location</button>\n               </form>\n            </div>\n\n         </div>\n      )\n   }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}